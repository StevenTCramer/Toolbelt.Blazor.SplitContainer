const n="pointerdown",t="pointermove",i="pointerup";export const attach=(r,u)=>{const f={dir:0,resizeTarget:-1,pivot:0,initSize:0,disposed:!1,dispose:null},e=u.querySelector(".spliter-bar"),o=Array.from(u.querySelectorAll(".pane-of-split-container")),c=Math.round,l=(n,t)=>c(n===0?t.screenX:t.screenY),a=(n,t)=>c((t=>n===0?t.width:t.height)(o[t].getBoundingClientRect())),s=(n,t,i)=>{n.addEventListener(t,i)},h=(n,t,i)=>{n.removeEventListener(t,i)},v=n=>{const t=f.resizeTarget,i=o[t]||null;if(i===null)return[null,0];const u=i.style,r=f.dir,s=l(r,n),h=s-f.pivot,e=f.initSize+(t==0?1:-1)*h+"px";return r===0?u.width=e:u.height=e,[i,a(r,t)]},y=n=>{v(n)},p=n=>{if(!document.contains(e)){f.dispose();return}const i=o.findIndex(n=>n.style.flex==="");if(i!==-1){const r=u.classList.contains("splitter-orientation-vertical")?0:1;f.dir=r;f.resizeTarget=i;f.pivot=l(r,n);f.initSize=a(r,i);s(e,t,y);e.setPointerCapture(n.pointerId)}},w=n=>{e.releasePointerCapture(n.pointerId);h(e,t,y);const[i,u]=v(n);r.invokeMethodAsync("UpdateSize",i===o[0],u)};return s(e,n,p),s(e,i,w),f.dispose=()=>{f.disposed||(f.disposed=!0,h(e,n,p),h(e,i,w))},f};